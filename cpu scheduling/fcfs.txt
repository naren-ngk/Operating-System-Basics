#include <stdio.h>
int flag=0;
int waitingtime(int proc[], int n,
int burst_time[], int wait_time[],int arrival_time[]) {
   wait_time[0] = 0;
   for (int i = 1; i < n ; i++ ){
           if(wait_time[i-1]+burst_time[i-1]<arrival_time[i]){
                flag=arrival_time[i]-(wait_time[i-1]+burst_time[i-1]);
           }
           else{
                   flag = 0;
           }
   wait_time[i] = burst_time[i-1] + wait_time[i-1] + flag ;
   }
   return 0;
}

int turnaroundtime( int proc[], int n,
int burst_time[], int wait_time[], int tat[],int arrival_time[]) {
   int i;
   for ( i = 0; i < n ; i++)
   tat[i] = burst_time[i] + wait_time[i] - arrival_time[i];
   return 0;
}

int avgtime( int proc[], int n, int burst_time[],int arrival_time[]) {
   int wait_time[n], tat[n], total_wt = 0, total_tat = 0;
   int i;
   waitingtime(proc, n, burst_time, wait_time,arrival_time);
   turnaroundtime(proc, n, burst_time, wait_time, tat,arrival_time);
   printf("Processes  Burst   Waiting Turn around\n");
   for ( i=0; i<n; i++) {
      total_wt = total_wt + wait_time[i];
      total_tat = total_tat + tat[i];
      printf(" %d\t  %d\t\t %d \t%d\n", proc[i], burst_time[i], wait_time[i], tat[i]);
   }
   printf("Average waiting time = %f\n", (float)total_wt / (float)n);
   printf("Average turn around time = %f\n", (float)total_tat / (float)n);
   return 0;
}

int main() {
   int n;
   printf("Enter the number of processes:");
   scanf("%d",&n);
   int proc[n];
   int burst_time[n];
   int arrival_time[n];
   for(int i=0;i<n;i++){
           printf("Enter the process id:");
           scanf("%d",&proc[i]);
           printf("Enter the process %d's burst time:");
           scanf("%d",&burst_time[i]);
           printf("Enter the process %d's arrival time:");
           scanf("%d",&arrival_time[i]);
   }
   avgtime(proc, n, burst_time,arrival_time);
   return 0;
}